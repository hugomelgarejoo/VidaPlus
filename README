SGHSS - Sistema de Gest√£o Hospitalar e de Servi√ßos de Sa√∫de (VidaPlus)
HUGO ALBERTO MELGAREJO GALEANO
RU: 4313926

üìã Vis√£o Geral
O VidaPlus SGHSS √© um sistema desenvolvido para gerenciar institui√ß√µes de sa√∫de como hospitais, cl√≠nicas, laborat√≥rios e servi√ßos de home care. O projeto visa centralizar informa√ß√µes de pacientes, agendamentos, prontu√°rios, prescri√ß√µes e atendimentos via telemedicina, al√©m de garantir seguran√ßa e conformidade com a LGPD.

üöÄ Tecnologias Utilizadas
Linguagem: Python 3.12

Framework: FastAPI

Banco de Dados: SQLite

Testes de API: Postman

Documenta√ß√£o de API: Swagger (gerado automaticamente pelo FastAPI)

Seguran√ßa: Autentica√ß√£o com JWT, criptografia de senhas AES-256

üõ† Funcionalidades Implementadas
Cadastro e gerenciamento de pacientes, m√©dicos e consultas

Prontu√°rio eletr√¥nico e prescri√ß√µes digitais

Agendamento de consultas presenciais e por telemedicina

Gera√ß√£o autom√°tica de links para videochamada

Controle de acesso por perfil (admin, m√©dico, paciente)

Conformidade com LGPD: logs e seguran√ßa dos dados


‚ñ∂Ô∏è Como Executar
Clone o reposit√≥rio:

git clone https://github.com/usuario/vidaplus-sghss.git
cd vidaplus-sghss

Instale as depend√™ncias:


pip install -r requirements.txt
Rode o servidor:

uvicorn main:app --reload


üìë Requisitos
‚úîÔ∏è Requisitos Funcionais
C√≥digo	Descri√ß√£o
RF01	O sistema deve permitir o cadastro de pacientes, m√©dicos, enfermeiros e administradores.
RF02	O sistema deve permitir o login com autentica√ß√£o e gera√ß√£o de token.
RF03	O paciente deve conseguir agendar, visualizar e cancelar consultas.
RF04	Os profissionais devem registrar prontu√°rios e prescri√ß√µes digitais.
RF05	O sistema deve registrar atendimentos por telemedicina com gera√ß√£o de link de chamada.
RF06	O administrador deve conseguir emitir relat√≥rios e controlar cadastros.
RF07	Deve ser poss√≠vel visualizar o hist√≥rico cl√≠nico do paciente.

‚ùå Requisitos N√£o Funcionais
C√≥digo	Descri√ß√£o
RNF01	O sistema deve armazenar os dados em banco SQLite com persist√™ncia.
RNF02	As senhas devem ser criptografadas usando AES-256.
RNF03	O sistema deve registrar logs de acesso e a√ß√µes cr√≠ticas.
RNF04	A API deve responder em at√© 2 segundos em consultas simples.
RNF05	A disponibilidade do sistema deve ser de 99,5%.
RNF06	A interface deve seguir padr√µes de acessibilidade (WCAG).
RNF07	O sistema deve estar em conformidade com a LGPD.